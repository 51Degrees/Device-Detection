# This file was automatically generated by SWIG (http://www.swig.org).
<<<<<<< HEAD
# Version 2.0.11
=======
# Version 2.0.4
>>>>>>> V32
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

package FiftyOneDegrees::PatternV3;
use base qw(Exporter);
use base qw(DynaLoader);
package FiftyOneDegrees::PatternV3c;
bootstrap FiftyOneDegrees::PatternV3;
package FiftyOneDegrees::PatternV3;
@EXPORT = qw();

# ---------- BASE METHODS -------------

package FiftyOneDegrees::PatternV3;

sub TIEHASH {
    my ($classname,$obj) = @_;
    return bless $obj, $classname;
}

sub CLEAR { }

sub FIRSTKEY { }

sub NEXTKEY { }

sub FETCH {
    my ($self,$field) = @_;
    my $member_func = "swig_${field}_get";
    $self->$member_func();
}

sub STORE {
    my ($self,$field,$newval) = @_;
    my $member_func = "swig_${field}_set";
    $self->$member_func($newval);
}

sub this {
    my $ptr = shift;
    return tied(%$ptr);
}


# ------- FUNCTION WRAPPERS --------

package FiftyOneDegrees::PatternV3;

<<<<<<< HEAD
*initWithPropertyArray = *FiftyOneDegrees::PatternV3c::initWithPropertyArray;
*initWithPropertyString = *FiftyOneDegrees::PatternV3c::initWithPropertyString;
*destroy = *FiftyOneDegrees::PatternV3c::destroy;
*createWorkset = *FiftyOneDegrees::PatternV3c::createWorkset;
*freeWorkset = *FiftyOneDegrees::PatternV3c::freeWorkset;
*match = *FiftyOneDegrees::PatternV3c::match;
*setValues = *FiftyOneDegrees::PatternV3c::setValues;
*getString = *FiftyOneDegrees::PatternV3c::getString;
*getValueName = *FiftyOneDegrees::PatternV3c::getValueName;
*getPropertyName = *FiftyOneDegrees::PatternV3c::getPropertyName;
*processDeviceCSV = *FiftyOneDegrees::PatternV3c::processDeviceCSV;
*processDeviceJSON = *FiftyOneDegrees::PatternV3c::processDeviceJSON;
*destroyDataset = *FiftyOneDegrees::PatternV3c::destroyDataset;
*dataSetInitWithPropertyString = *FiftyOneDegrees::PatternV3c::dataSetInitWithPropertyString;
*getMatch = *FiftyOneDegrees::PatternV3c::getMatch;

############# Class : FiftyOneDegrees::PatternV3::RANGE ##############

package FiftyOneDegrees::PatternV3::RANGE;
=======
*fiftyoneDegreesInitWithPropertyArray = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesInitWithPropertyArray;
*fiftyoneDegreesInitWithPropertyString = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesInitWithPropertyString;
*fiftyoneDegreesDataSetFree = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetFree;
*fiftyoneDegreesResultsetCacheCreate = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheCreate;
*fiftyoneDegreesResultsetCacheFree = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheFree;
*fiftyoneDegreesWorksetPoolCreate = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPoolCreate;
*fiftyoneDegreesWorksetPoolFree = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPoolFree;
*fiftyoneDegreesWorksetPoolGet = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPoolGet;
*fiftyoneDegreesWorksetPoolRelease = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPoolRelease;
*fiftyoneDegreesWorksetCreate = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetCreate;
*fiftyoneDegreesWorksetFree = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetFree;
*fiftyoneDegreesJSONCreate = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesJSONCreate;
*fiftyoneDegreesJSONFree = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesJSONFree;
*fiftyoneDegreesCSVCreate = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesCSVCreate;
*fiftyoneDegreesCSVFree = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesCSVFree;
*fiftyoneDegreesMatch = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesMatch;
*fiftyoneDegreesMatchWithHeadersArray = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesMatchWithHeadersArray;
*fiftyoneDegreesMatchWithHeadersString = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesMatchWithHeadersString;
*fiftyoneDegreesSetHttpHeaders = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesSetHttpHeaders;
*fiftyoneDegreesMatchForHttpHeaders = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesMatchForHttpHeaders;
*fiftyoneDegreesSetValues = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesSetValues;
*fiftyoneDegreesGetString = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesGetString;
*fiftyoneDegreesGetValues = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesGetValues;
*fiftyoneDegreesGetValueName = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesGetValueName;
*fiftyoneDegreesGetPropertyName = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesGetPropertyName;
*fiftyoneDegreesGetRequiredPropertyName = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesGetRequiredPropertyName;
*fiftyoneDegreesGetHttpHeaderName = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesGetHttpHeaderName;
*fiftyoneDegreesGetRequiredPropertyIndex = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesGetRequiredPropertyIndex;
*fiftyoneDegreesProcessDeviceCSV = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProcessDeviceCSV;
*fiftyoneDegreesProcessDeviceJSON = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProcessDeviceJSON;
*fiftyoneDegreesGetSignatureRank = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesGetSignatureRank;
*fiftyoneDegreesGetSignatureAsString = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesGetSignatureAsString;
*fiftyoneDegreesGetDeviceId = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesGetDeviceId;
*freeDataset = *FiftyOneDegrees::PatternV3c::freeDataset;
*dataSetProvider = *FiftyOneDegrees::PatternV3c::dataSetProvider;
*getMatch = *FiftyOneDegrees::PatternV3c::getMatch;
*getMatchWithHeaders = *FiftyOneDegrees::PatternV3c::getMatchWithHeaders;
*freeMatch = *FiftyOneDegrees::PatternV3c::freeMatch;

############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesRANGE ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesRANGE;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_lower_get = *FiftyOneDegrees::PatternV3c::RANGE_lower_get;
*swig_lower_set = *FiftyOneDegrees::PatternV3c::RANGE_lower_set;
*swig_upper_get = *FiftyOneDegrees::PatternV3c::RANGE_upper_get;
*swig_upper_set = *FiftyOneDegrees::PatternV3c::RANGE_upper_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_RANGE(@_);
=======
*swig_lower_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesRANGE_lower_get;
*swig_lower_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesRANGE_lower_set;
*swig_upper_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesRANGE_upper_get;
*swig_upper_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesRANGE_upper_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesRANGE(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_RANGE($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesRANGE($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::AsciiString ##############

package FiftyOneDegrees::PatternV3::AsciiString;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesAsciiString ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesAsciiString;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_length_get = *FiftyOneDegrees::PatternV3c::AsciiString_length_get;
*swig_length_set = *FiftyOneDegrees::PatternV3c::AsciiString_length_set;
*swig_firstByte_get = *FiftyOneDegrees::PatternV3c::AsciiString_firstByte_get;
*swig_firstByte_set = *FiftyOneDegrees::PatternV3c::AsciiString_firstByte_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_AsciiString(@_);
=======
*swig_length_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesAsciiString_length_get;
*swig_length_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesAsciiString_length_set;
*swig_firstByte_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesAsciiString_firstByte_get;
*swig_firstByte_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesAsciiString_firstByte_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesAsciiString(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_AsciiString($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesAsciiString($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::Component ##############

package FiftyOneDegrees::PatternV3::Component;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesComponent ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesComponent;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_componentId_get = *FiftyOneDegrees::PatternV3c::Component_componentId_get;
*swig_componentId_set = *FiftyOneDegrees::PatternV3c::Component_componentId_set;
*swig_nameOffset_get = *FiftyOneDegrees::PatternV3c::Component_nameOffset_get;
*swig_nameOffset_set = *FiftyOneDegrees::PatternV3c::Component_nameOffset_set;
*swig_defaultProfileOffset_get = *FiftyOneDegrees::PatternV3c::Component_defaultProfileOffset_get;
*swig_defaultProfileOffset_set = *FiftyOneDegrees::PatternV3c::Component_defaultProfileOffset_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_Component(@_);
=======
*swig_componentId_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesComponent_componentId_get;
*swig_componentId_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesComponent_componentId_set;
*swig_nameOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesComponent_nameOffset_get;
*swig_nameOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesComponent_nameOffset_set;
*swig_defaultProfileOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesComponent_defaultProfileOffset_get;
*swig_defaultProfileOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesComponent_defaultProfileOffset_set;
*swig_httpHeaderCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesComponent_httpHeaderCount_get;
*swig_httpHeaderCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesComponent_httpHeaderCount_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesComponent(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_Component($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesComponent($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::Map ##############

package FiftyOneDegrees::PatternV3::Map;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesMap ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesMap;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_nameOffset_get = *FiftyOneDegrees::PatternV3c::Map_nameOffset_get;
*swig_nameOffset_set = *FiftyOneDegrees::PatternV3c::Map_nameOffset_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_Map(@_);
=======
*swig_nameOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesMap_nameOffset_get;
*swig_nameOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesMap_nameOffset_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesMap(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_Map($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesMap($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::NodeNumericIndex ##############

package FiftyOneDegrees::PatternV3::NodeNumericIndex;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesNodeNumericIndex ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesNodeNumericIndex;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_value_get = *FiftyOneDegrees::PatternV3c::NodeNumericIndex_value_get;
*swig_value_set = *FiftyOneDegrees::PatternV3c::NodeNumericIndex_value_set;
*swig_relatedNodeOffset_get = *FiftyOneDegrees::PatternV3c::NodeNumericIndex_relatedNodeOffset_get;
*swig_relatedNodeOffset_set = *FiftyOneDegrees::PatternV3c::NodeNumericIndex_relatedNodeOffset_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_NodeNumericIndex(@_);
=======
*swig_value_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeNumericIndex_value_get;
*swig_value_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeNumericIndex_value_set;
*swig_relatedNodeOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeNumericIndex_relatedNodeOffset_get;
*swig_relatedNodeOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeNumericIndex_relatedNodeOffset_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesNodeNumericIndex(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_NodeNumericIndex($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesNodeNumericIndex($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::NodeIndexValue ##############

package FiftyOneDegrees::PatternV3::NodeIndexValue;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesNodeIndexValue ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesNodeIndexValue;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_characters_get = *FiftyOneDegrees::PatternV3c::NodeIndexValue_characters_get;
*swig_characters_set = *FiftyOneDegrees::PatternV3c::NodeIndexValue_characters_set;
*swig_integer_get = *FiftyOneDegrees::PatternV3c::NodeIndexValue_integer_get;
*swig_integer_set = *FiftyOneDegrees::PatternV3c::NodeIndexValue_integer_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_NodeIndexValue(@_);
=======
*swig_characters_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndexValue_characters_get;
*swig_characters_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndexValue_characters_set;
*swig_integer_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndexValue_integer_get;
*swig_integer_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndexValue_integer_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesNodeIndexValue(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_NodeIndexValue($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesNodeIndexValue($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::NodeIndex ##############

package FiftyOneDegrees::PatternV3::NodeIndex;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesNodeIndex ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesNodeIndex;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_isString_get = *FiftyOneDegrees::PatternV3c::NodeIndex_isString_get;
*swig_isString_set = *FiftyOneDegrees::PatternV3c::NodeIndex_isString_set;
*swig_relatedNodeOffset_get = *FiftyOneDegrees::PatternV3c::NodeIndex_relatedNodeOffset_get;
*swig_relatedNodeOffset_set = *FiftyOneDegrees::PatternV3c::NodeIndex_relatedNodeOffset_set;
*swig_value_get = *FiftyOneDegrees::PatternV3c::NodeIndex_value_get;
*swig_value_set = *FiftyOneDegrees::PatternV3c::NodeIndex_value_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_NodeIndex(@_);
=======
*swig_relatedNodeOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndex_relatedNodeOffset_get;
*swig_relatedNodeOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndex_relatedNodeOffset_set;
*swig_value_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndex_value_get;
*swig_value_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndex_value_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesNodeIndex(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_NodeIndex($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesNodeIndex($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::NodeIndex_value ##############

package FiftyOneDegrees::PatternV3::NodeIndex_value;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesNodeIndex_value ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesNodeIndex_value;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_characters_get = *FiftyOneDegrees::PatternV3c::NodeIndex_value_characters_get;
*swig_characters_set = *FiftyOneDegrees::PatternV3c::NodeIndex_value_characters_set;
*swig_integer_get = *FiftyOneDegrees::PatternV3c::NodeIndex_value_integer_get;
*swig_integer_set = *FiftyOneDegrees::PatternV3c::NodeIndex_value_integer_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_NodeIndex_value(@_);
=======
*swig_characters_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndex_value_characters_get;
*swig_characters_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndex_value_characters_set;
*swig_integer_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndex_value_integer_get;
*swig_integer_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNodeIndex_value_integer_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesNodeIndex_value(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_NodeIndex_value($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesNodeIndex_value($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::String ##############

package FiftyOneDegrees::PatternV3::String;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesString ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesString;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_value_get = *FiftyOneDegrees::PatternV3c::String_value_get;
*swig_value_set = *FiftyOneDegrees::PatternV3c::String_value_set;
*swig_length_get = *FiftyOneDegrees::PatternV3c::String_length_get;
*swig_length_set = *FiftyOneDegrees::PatternV3c::String_length_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_String(@_);
=======
*swig_value_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesString_value_get;
*swig_value_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesString_value_set;
*swig_length_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesString_length_get;
*swig_length_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesString_length_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesString(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_String($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesString($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::Strings ##############

package FiftyOneDegrees::PatternV3::Strings;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesStrings ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesStrings;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_firstString_get = *FiftyOneDegrees::PatternV3c::Strings_firstString_get;
*swig_firstString_set = *FiftyOneDegrees::PatternV3c::Strings_firstString_set;
*swig_count_get = *FiftyOneDegrees::PatternV3c::Strings_count_get;
*swig_count_set = *FiftyOneDegrees::PatternV3c::Strings_count_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_Strings(@_);
=======
*swig_firstString_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesStrings_firstString_get;
*swig_firstString_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesStrings_firstString_set;
*swig_count_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesStrings_count_get;
*swig_count_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesStrings_count_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesStrings(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_Strings($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesStrings($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::Node ##############

package FiftyOneDegrees::PatternV3::Node;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesNode ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesNode;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_position_get = *FiftyOneDegrees::PatternV3c::Node_position_get;
*swig_position_set = *FiftyOneDegrees::PatternV3c::Node_position_set;
*swig_nextCharacterPosition_get = *FiftyOneDegrees::PatternV3c::Node_nextCharacterPosition_get;
*swig_nextCharacterPosition_set = *FiftyOneDegrees::PatternV3c::Node_nextCharacterPosition_set;
*swig_parentOffset_get = *FiftyOneDegrees::PatternV3c::Node_parentOffset_get;
*swig_parentOffset_set = *FiftyOneDegrees::PatternV3c::Node_parentOffset_set;
*swig_characterStringOffset_get = *FiftyOneDegrees::PatternV3c::Node_characterStringOffset_get;
*swig_characterStringOffset_set = *FiftyOneDegrees::PatternV3c::Node_characterStringOffset_set;
*swig_childrenCount_get = *FiftyOneDegrees::PatternV3c::Node_childrenCount_get;
*swig_childrenCount_set = *FiftyOneDegrees::PatternV3c::Node_childrenCount_set;
*swig_numericChildrenCount_get = *FiftyOneDegrees::PatternV3c::Node_numericChildrenCount_get;
*swig_numericChildrenCount_set = *FiftyOneDegrees::PatternV3c::Node_numericChildrenCount_set;
*swig_signatureCount_get = *FiftyOneDegrees::PatternV3c::Node_signatureCount_get;
*swig_signatureCount_set = *FiftyOneDegrees::PatternV3c::Node_signatureCount_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_Node(@_);
=======
*swig_position_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_position_get;
*swig_position_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_position_set;
*swig_nextCharacterPosition_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_nextCharacterPosition_get;
*swig_nextCharacterPosition_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_nextCharacterPosition_set;
*swig_parentOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_parentOffset_get;
*swig_parentOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_parentOffset_set;
*swig_characterStringOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_characterStringOffset_get;
*swig_characterStringOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_characterStringOffset_set;
*swig_childrenCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_childrenCount_get;
*swig_childrenCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_childrenCount_set;
*swig_numericChildrenCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_numericChildrenCount_get;
*swig_numericChildrenCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_numericChildrenCount_set;
*swig_signatureCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_signatureCount_get;
*swig_signatureCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNode_signatureCount_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesNode(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_Node($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesNode($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::ProfileOffset ##############

package FiftyOneDegrees::PatternV3::ProfileOffset;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesProfileOffset ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesProfileOffset;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_profileId_get = *FiftyOneDegrees::PatternV3c::ProfileOffset_profileId_get;
*swig_profileId_set = *FiftyOneDegrees::PatternV3c::ProfileOffset_profileId_set;
*swig_offset_get = *FiftyOneDegrees::PatternV3c::ProfileOffset_offset_get;
*swig_offset_set = *FiftyOneDegrees::PatternV3c::ProfileOffset_offset_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_ProfileOffset(@_);
=======
*swig_profileId_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfileOffset_profileId_get;
*swig_profileId_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfileOffset_profileId_set;
*swig_offset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfileOffset_offset_get;
*swig_offset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfileOffset_offset_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesProfileOffset(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_ProfileOffset($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesProfileOffset($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::Property ##############

package FiftyOneDegrees::PatternV3::Property;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesProperty ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesProperty;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_componentIndex_get = *FiftyOneDegrees::PatternV3c::Property_componentIndex_get;
*swig_componentIndex_set = *FiftyOneDegrees::PatternV3c::Property_componentIndex_set;
*swig_displayOrder_get = *FiftyOneDegrees::PatternV3c::Property_displayOrder_get;
*swig_displayOrder_set = *FiftyOneDegrees::PatternV3c::Property_displayOrder_set;
*swig_isMandatory_get = *FiftyOneDegrees::PatternV3c::Property_isMandatory_get;
*swig_isMandatory_set = *FiftyOneDegrees::PatternV3c::Property_isMandatory_set;
*swig_isList_get = *FiftyOneDegrees::PatternV3c::Property_isList_get;
*swig_isList_set = *FiftyOneDegrees::PatternV3c::Property_isList_set;
*swig_showValues_get = *FiftyOneDegrees::PatternV3c::Property_showValues_get;
*swig_showValues_set = *FiftyOneDegrees::PatternV3c::Property_showValues_set;
*swig_isObsolete_get = *FiftyOneDegrees::PatternV3c::Property_isObsolete_get;
*swig_isObsolete_set = *FiftyOneDegrees::PatternV3c::Property_isObsolete_set;
*swig_show_get = *FiftyOneDegrees::PatternV3c::Property_show_get;
*swig_show_set = *FiftyOneDegrees::PatternV3c::Property_show_set;
*swig_valueType_get = *FiftyOneDegrees::PatternV3c::Property_valueType_get;
*swig_valueType_set = *FiftyOneDegrees::PatternV3c::Property_valueType_set;
*swig_defaultValueIndex_get = *FiftyOneDegrees::PatternV3c::Property_defaultValueIndex_get;
*swig_defaultValueIndex_set = *FiftyOneDegrees::PatternV3c::Property_defaultValueIndex_set;
*swig_nameOffset_get = *FiftyOneDegrees::PatternV3c::Property_nameOffset_get;
*swig_nameOffset_set = *FiftyOneDegrees::PatternV3c::Property_nameOffset_set;
*swig_descriptionOffset_get = *FiftyOneDegrees::PatternV3c::Property_descriptionOffset_get;
*swig_descriptionOffset_set = *FiftyOneDegrees::PatternV3c::Property_descriptionOffset_set;
*swig_categoryOffset_get = *FiftyOneDegrees::PatternV3c::Property_categoryOffset_get;
*swig_categoryOffset_set = *FiftyOneDegrees::PatternV3c::Property_categoryOffset_set;
*swig_urlOffset_get = *FiftyOneDegrees::PatternV3c::Property_urlOffset_get;
*swig_urlOffset_set = *FiftyOneDegrees::PatternV3c::Property_urlOffset_set;
*swig_firstValueIndex_get = *FiftyOneDegrees::PatternV3c::Property_firstValueIndex_get;
*swig_firstValueIndex_set = *FiftyOneDegrees::PatternV3c::Property_firstValueIndex_set;
*swig_lastValueIndex_get = *FiftyOneDegrees::PatternV3c::Property_lastValueIndex_get;
*swig_lastValueIndex_set = *FiftyOneDegrees::PatternV3c::Property_lastValueIndex_set;
*swig_mapCount_get = *FiftyOneDegrees::PatternV3c::Property_mapCount_get;
*swig_mapCount_set = *FiftyOneDegrees::PatternV3c::Property_mapCount_set;
*swig_firstMapIndex_get = *FiftyOneDegrees::PatternV3c::Property_firstMapIndex_get;
*swig_firstMapIndex_set = *FiftyOneDegrees::PatternV3c::Property_firstMapIndex_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_Property(@_);
=======
*swig_componentIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_componentIndex_get;
*swig_componentIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_componentIndex_set;
*swig_displayOrder_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_displayOrder_get;
*swig_displayOrder_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_displayOrder_set;
*swig_isMandatory_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_isMandatory_get;
*swig_isMandatory_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_isMandatory_set;
*swig_isList_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_isList_get;
*swig_isList_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_isList_set;
*swig_showValues_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_showValues_get;
*swig_showValues_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_showValues_set;
*swig_isObsolete_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_isObsolete_get;
*swig_isObsolete_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_isObsolete_set;
*swig_show_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_show_get;
*swig_show_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_show_set;
*swig_valueType_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_valueType_get;
*swig_valueType_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_valueType_set;
*swig_defaultValueIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_defaultValueIndex_get;
*swig_defaultValueIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_defaultValueIndex_set;
*swig_nameOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_nameOffset_get;
*swig_nameOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_nameOffset_set;
*swig_descriptionOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_descriptionOffset_get;
*swig_descriptionOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_descriptionOffset_set;
*swig_categoryOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_categoryOffset_get;
*swig_categoryOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_categoryOffset_set;
*swig_urlOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_urlOffset_get;
*swig_urlOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_urlOffset_set;
*swig_firstValueIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_firstValueIndex_get;
*swig_firstValueIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_firstValueIndex_set;
*swig_lastValueIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_lastValueIndex_get;
*swig_lastValueIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_lastValueIndex_set;
*swig_mapCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_mapCount_get;
*swig_mapCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_mapCount_set;
*swig_firstMapIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_firstMapIndex_get;
*swig_firstMapIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProperty_firstMapIndex_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesProperty(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_Property($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesProperty($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::Value ##############

package FiftyOneDegrees::PatternV3::Value;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesValue ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesValue;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_propertyIndex_get = *FiftyOneDegrees::PatternV3c::Value_propertyIndex_get;
*swig_propertyIndex_set = *FiftyOneDegrees::PatternV3c::Value_propertyIndex_set;
*swig_nameOffset_get = *FiftyOneDegrees::PatternV3c::Value_nameOffset_get;
*swig_nameOffset_set = *FiftyOneDegrees::PatternV3c::Value_nameOffset_set;
*swig_descriptionOffset_get = *FiftyOneDegrees::PatternV3c::Value_descriptionOffset_get;
*swig_descriptionOffset_set = *FiftyOneDegrees::PatternV3c::Value_descriptionOffset_set;
*swig_urlOffset_get = *FiftyOneDegrees::PatternV3c::Value_urlOffset_get;
*swig_urlOffset_set = *FiftyOneDegrees::PatternV3c::Value_urlOffset_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_Value(@_);
=======
*swig_propertyIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesValue_propertyIndex_get;
*swig_propertyIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesValue_propertyIndex_set;
*swig_nameOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesValue_nameOffset_get;
*swig_nameOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesValue_nameOffset_set;
*swig_descriptionOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesValue_descriptionOffset_get;
*swig_descriptionOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesValue_descriptionOffset_set;
*swig_urlOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesValue_urlOffset_get;
*swig_urlOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesValue_urlOffset_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesValue(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_Value($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesValue($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::Profile ##############

package FiftyOneDegrees::PatternV3::Profile;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesProfile ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesProfile;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_componentIndex_get = *FiftyOneDegrees::PatternV3c::Profile_componentIndex_get;
*swig_componentIndex_set = *FiftyOneDegrees::PatternV3c::Profile_componentIndex_set;
*swig_profileId_get = *FiftyOneDegrees::PatternV3c::Profile_profileId_get;
*swig_profileId_set = *FiftyOneDegrees::PatternV3c::Profile_profileId_set;
*swig_valueCount_get = *FiftyOneDegrees::PatternV3c::Profile_valueCount_get;
*swig_valueCount_set = *FiftyOneDegrees::PatternV3c::Profile_valueCount_set;
*swig_signatureCount_get = *FiftyOneDegrees::PatternV3c::Profile_signatureCount_get;
*swig_signatureCount_set = *FiftyOneDegrees::PatternV3c::Profile_signatureCount_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_Profile(@_);
=======
*swig_componentIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfile_componentIndex_get;
*swig_componentIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfile_componentIndex_set;
*swig_profileId_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfile_profileId_get;
*swig_profileId_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfile_profileId_set;
*swig_valueCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfile_valueCount_get;
*swig_valueCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfile_valueCount_set;
*swig_signatureCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfile_signatureCount_get;
*swig_signatureCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesProfile_signatureCount_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesProfile(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_Profile($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesProfile($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::Date ##############

package FiftyOneDegrees::PatternV3::Date;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesDate ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesDate;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_year_get = *FiftyOneDegrees::PatternV3c::Date_year_get;
*swig_year_set = *FiftyOneDegrees::PatternV3c::Date_year_set;
*swig_month_get = *FiftyOneDegrees::PatternV3c::Date_month_get;
*swig_month_set = *FiftyOneDegrees::PatternV3c::Date_month_set;
*swig_day_get = *FiftyOneDegrees::PatternV3c::Date_day_get;
*swig_day_set = *FiftyOneDegrees::PatternV3c::Date_day_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_Date(@_);
=======
*swig_year_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDate_year_get;
*swig_year_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDate_year_set;
*swig_month_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDate_month_get;
*swig_month_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDate_month_set;
*swig_day_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDate_day_get;
*swig_day_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDate_day_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesDate(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_Date($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesDate($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::EntityHeader ##############

package FiftyOneDegrees::PatternV3::EntityHeader;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesEntityHeader ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesEntityHeader;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_startPosition_get = *FiftyOneDegrees::PatternV3c::EntityHeader_startPosition_get;
*swig_startPosition_set = *FiftyOneDegrees::PatternV3c::EntityHeader_startPosition_set;
*swig_length_get = *FiftyOneDegrees::PatternV3c::EntityHeader_length_get;
*swig_length_set = *FiftyOneDegrees::PatternV3c::EntityHeader_length_set;
*swig_count_get = *FiftyOneDegrees::PatternV3c::EntityHeader_count_get;
*swig_count_set = *FiftyOneDegrees::PatternV3c::EntityHeader_count_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_EntityHeader(@_);
=======
*swig_startPosition_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesEntityHeader_startPosition_get;
*swig_startPosition_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesEntityHeader_startPosition_set;
*swig_length_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesEntityHeader_length_get;
*swig_length_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesEntityHeader_length_set;
*swig_count_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesEntityHeader_count_get;
*swig_count_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesEntityHeader_count_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesEntityHeader(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_EntityHeader($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesEntityHeader($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::NumericNodeState ##############

package FiftyOneDegrees::PatternV3::NumericNodeState;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesNumericNodeState ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesNumericNodeState;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_target_get = *FiftyOneDegrees::PatternV3c::NumericNodeState_target_get;
*swig_target_set = *FiftyOneDegrees::PatternV3c::NumericNodeState_target_set;
*swig_node_get = *FiftyOneDegrees::PatternV3c::NumericNodeState_node_get;
*swig_node_set = *FiftyOneDegrees::PatternV3c::NumericNodeState_node_set;
*swig_firstNodeNumericIndex_get = *FiftyOneDegrees::PatternV3c::NumericNodeState_firstNodeNumericIndex_get;
*swig_firstNodeNumericIndex_set = *FiftyOneDegrees::PatternV3c::NumericNodeState_firstNodeNumericIndex_set;
*swig_range_get = *FiftyOneDegrees::PatternV3c::NumericNodeState_range_get;
*swig_range_set = *FiftyOneDegrees::PatternV3c::NumericNodeState_range_set;
*swig_startIndex_get = *FiftyOneDegrees::PatternV3c::NumericNodeState_startIndex_get;
*swig_startIndex_set = *FiftyOneDegrees::PatternV3c::NumericNodeState_startIndex_set;
*swig_lowIndex_get = *FiftyOneDegrees::PatternV3c::NumericNodeState_lowIndex_get;
*swig_lowIndex_set = *FiftyOneDegrees::PatternV3c::NumericNodeState_lowIndex_set;
*swig_highIndex_get = *FiftyOneDegrees::PatternV3c::NumericNodeState_highIndex_get;
*swig_highIndex_set = *FiftyOneDegrees::PatternV3c::NumericNodeState_highIndex_set;
*swig_lowInRange_get = *FiftyOneDegrees::PatternV3c::NumericNodeState_lowInRange_get;
*swig_lowInRange_set = *FiftyOneDegrees::PatternV3c::NumericNodeState_lowInRange_set;
*swig_highInRange_get = *FiftyOneDegrees::PatternV3c::NumericNodeState_highInRange_get;
*swig_highInRange_set = *FiftyOneDegrees::PatternV3c::NumericNodeState_highInRange_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_NumericNodeState(@_);
=======
*swig_target_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_target_get;
*swig_target_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_target_set;
*swig_node_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_node_get;
*swig_node_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_node_set;
*swig_firstNodeNumericIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_firstNodeNumericIndex_get;
*swig_firstNodeNumericIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_firstNodeNumericIndex_set;
*swig_range_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_range_get;
*swig_range_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_range_set;
*swig_startIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_startIndex_get;
*swig_startIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_startIndex_set;
*swig_lowIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_lowIndex_get;
*swig_lowIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_lowIndex_set;
*swig_highIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_highIndex_get;
*swig_highIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_highIndex_set;
*swig_lowInRange_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_lowInRange_get;
*swig_lowInRange_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_lowInRange_set;
*swig_highInRange_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_highInRange_get;
*swig_highInRange_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesNumericNodeState_highInRange_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesNumericNodeState(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_NumericNodeState($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesNumericNodeState($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::DataSetHeader ##############

package FiftyOneDegrees::PatternV3::DataSetHeader;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesDataSetHeader ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesDataSetHeader;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_versionMajor_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_versionMajor_get;
*swig_versionMajor_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_versionMajor_set;
*swig_versionMinor_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_versionMinor_get;
*swig_versionMinor_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_versionMinor_set;
*swig_versionBuild_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_versionBuild_get;
*swig_versionBuild_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_versionBuild_set;
*swig_versionRevision_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_versionRevision_get;
*swig_versionRevision_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_versionRevision_set;
*swig_tag_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_tag_get;
*swig_tag_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_tag_set;
*swig_copyrightOffset_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_copyrightOffset_get;
*swig_copyrightOffset_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_copyrightOffset_set;
*swig_age_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_age_get;
*swig_age_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_age_set;
*swig_minUserAgentCount_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_minUserAgentCount_get;
*swig_minUserAgentCount_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_minUserAgentCount_set;
*swig_nameOffset_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_nameOffset_get;
*swig_nameOffset_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_nameOffset_set;
*swig_formatOffset_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_formatOffset_get;
*swig_formatOffset_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_formatOffset_set;
*swig_published_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_published_get;
*swig_published_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_published_set;
*swig_nextUpdate_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_nextUpdate_get;
*swig_nextUpdate_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_nextUpdate_set;
*swig_deviceCombinations_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_deviceCombinations_get;
*swig_deviceCombinations_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_deviceCombinations_set;
*swig_maxUserAgentLength_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_maxUserAgentLength_get;
*swig_maxUserAgentLength_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_maxUserAgentLength_set;
*swig_minUserAgentLength_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_minUserAgentLength_get;
*swig_minUserAgentLength_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_minUserAgentLength_set;
*swig_lowestCharacter_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_lowestCharacter_get;
*swig_lowestCharacter_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_lowestCharacter_set;
*swig_highestCharacter_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_highestCharacter_get;
*swig_highestCharacter_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_highestCharacter_set;
*swig_maxSignatures_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_maxSignatures_get;
*swig_maxSignatures_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_maxSignatures_set;
*swig_signatureProfilesCount_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_signatureProfilesCount_get;
*swig_signatureProfilesCount_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_signatureProfilesCount_set;
*swig_signatureNodesCount_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_signatureNodesCount_get;
*swig_signatureNodesCount_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_signatureNodesCount_set;
*swig_maxValues_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_maxValues_get;
*swig_maxValues_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_maxValues_set;
*swig_csvBufferLength_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_csvBufferLength_get;
*swig_csvBufferLength_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_csvBufferLength_set;
*swig_jsonBufferLength_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_jsonBufferLength_get;
*swig_jsonBufferLength_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_jsonBufferLength_set;
*swig_xmlBufferLength_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_xmlBufferLength_get;
*swig_xmlBufferLength_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_xmlBufferLength_set;
*swig_maxSignaturesClosest_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_maxSignaturesClosest_get;
*swig_maxSignaturesClosest_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_maxSignaturesClosest_set;
*swig_strings_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_strings_get;
*swig_strings_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_strings_set;
*swig_components_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_components_get;
*swig_components_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_components_set;
*swig_maps_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_maps_get;
*swig_maps_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_maps_set;
*swig_properties_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_properties_get;
*swig_properties_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_properties_set;
*swig_values_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_values_get;
*swig_values_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_values_set;
*swig_profiles_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_profiles_get;
*swig_profiles_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_profiles_set;
*swig_signatures_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_signatures_get;
*swig_signatures_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_signatures_set;
*swig_rankedSignatureIndexes_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_rankedSignatureIndexes_get;
*swig_rankedSignatureIndexes_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_rankedSignatureIndexes_set;
*swig_nodes_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_nodes_get;
*swig_nodes_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_nodes_set;
*swig_rootNodes_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_rootNodes_get;
*swig_rootNodes_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_rootNodes_set;
*swig_profileOffsets_get = *FiftyOneDegrees::PatternV3c::DataSetHeader_profileOffsets_get;
*swig_profileOffsets_set = *FiftyOneDegrees::PatternV3c::DataSetHeader_profileOffsets_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_DataSetHeader(@_);
=======
*swig_versionMajor_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_versionMajor_get;
*swig_versionMajor_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_versionMajor_set;
*swig_versionMinor_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_versionMinor_get;
*swig_versionMinor_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_versionMinor_set;
*swig_versionBuild_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_versionBuild_get;
*swig_versionBuild_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_versionBuild_set;
*swig_versionRevision_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_versionRevision_get;
*swig_versionRevision_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_versionRevision_set;
*swig_tag_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_tag_get;
*swig_tag_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_tag_set;
*swig_exportTag_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_exportTag_get;
*swig_exportTag_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_exportTag_set;
*swig_copyrightOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_copyrightOffset_get;
*swig_copyrightOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_copyrightOffset_set;
*swig_age_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_age_get;
*swig_age_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_age_set;
*swig_minUserAgentCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_minUserAgentCount_get;
*swig_minUserAgentCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_minUserAgentCount_set;
*swig_nameOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_nameOffset_get;
*swig_nameOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_nameOffset_set;
*swig_formatOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_formatOffset_get;
*swig_formatOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_formatOffset_set;
*swig_published_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_published_get;
*swig_published_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_published_set;
*swig_nextUpdate_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_nextUpdate_get;
*swig_nextUpdate_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_nextUpdate_set;
*swig_deviceCombinations_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_deviceCombinations_get;
*swig_deviceCombinations_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_deviceCombinations_set;
*swig_maxUserAgentLength_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maxUserAgentLength_get;
*swig_maxUserAgentLength_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maxUserAgentLength_set;
*swig_minUserAgentLength_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_minUserAgentLength_get;
*swig_minUserAgentLength_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_minUserAgentLength_set;
*swig_lowestCharacter_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_lowestCharacter_get;
*swig_lowestCharacter_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_lowestCharacter_set;
*swig_highestCharacter_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_highestCharacter_get;
*swig_highestCharacter_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_highestCharacter_set;
*swig_maxSignatures_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maxSignatures_get;
*swig_maxSignatures_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maxSignatures_set;
*swig_signatureProfilesCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_signatureProfilesCount_get;
*swig_signatureProfilesCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_signatureProfilesCount_set;
*swig_signatureNodesCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_signatureNodesCount_get;
*swig_signatureNodesCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_signatureNodesCount_set;
*swig_maxValues_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maxValues_get;
*swig_maxValues_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maxValues_set;
*swig_csvBufferLength_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_csvBufferLength_get;
*swig_csvBufferLength_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_csvBufferLength_set;
*swig_jsonBufferLength_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_jsonBufferLength_get;
*swig_jsonBufferLength_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_jsonBufferLength_set;
*swig_xmlBufferLength_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_xmlBufferLength_get;
*swig_xmlBufferLength_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_xmlBufferLength_set;
*swig_maxSignaturesClosest_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maxSignaturesClosest_get;
*swig_maxSignaturesClosest_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maxSignaturesClosest_set;
*swig_maxRank_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maxRank_get;
*swig_maxRank_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maxRank_set;
*swig_strings_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_strings_get;
*swig_strings_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_strings_set;
*swig_components_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_components_get;
*swig_components_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_components_set;
*swig_maps_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maps_get;
*swig_maps_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_maps_set;
*swig_properties_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_properties_get;
*swig_properties_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_properties_set;
*swig_values_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_values_get;
*swig_values_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_values_set;
*swig_profiles_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_profiles_get;
*swig_profiles_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_profiles_set;
*swig_signatures_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_signatures_get;
*swig_signatures_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_signatures_set;
*swig_signatureNodeOffsets_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_signatureNodeOffsets_get;
*swig_signatureNodeOffsets_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_signatureNodeOffsets_set;
*swig_nodeRankedSignatureIndexes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_nodeRankedSignatureIndexes_get;
*swig_nodeRankedSignatureIndexes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_nodeRankedSignatureIndexes_set;
*swig_rankedSignatureIndexes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_rankedSignatureIndexes_get;
*swig_rankedSignatureIndexes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_rankedSignatureIndexes_set;
*swig_nodes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_nodes_get;
*swig_nodes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_nodes_set;
*swig_rootNodes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_rootNodes_get;
*swig_rootNodes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_rootNodes_set;
*swig_profileOffsets_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_profileOffsets_get;
*swig_profileOffsets_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSetHeader_profileOffsets_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesDataSetHeader(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_DataSetHeader($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesDataSetHeader($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::DataSet ##############

package FiftyOneDegrees::PatternV3::DataSet;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesSignature ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesSignature;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_header_get = *FiftyOneDegrees::PatternV3c::DataSet_header_get;
*swig_header_set = *FiftyOneDegrees::PatternV3c::DataSet_header_set;
*swig_sizeOfSignature_get = *FiftyOneDegrees::PatternV3c::DataSet_sizeOfSignature_get;
*swig_sizeOfSignature_set = *FiftyOneDegrees::PatternV3c::DataSet_sizeOfSignature_set;
*swig_signatureStartOfNodes_get = *FiftyOneDegrees::PatternV3c::DataSet_signatureStartOfNodes_get;
*swig_signatureStartOfNodes_set = *FiftyOneDegrees::PatternV3c::DataSet_signatureStartOfNodes_set;
*swig_requiredProperties_get = *FiftyOneDegrees::PatternV3c::DataSet_requiredProperties_get;
*swig_requiredProperties_set = *FiftyOneDegrees::PatternV3c::DataSet_requiredProperties_set;
*swig_requiredPropertyCount_get = *FiftyOneDegrees::PatternV3c::DataSet_requiredPropertyCount_get;
*swig_requiredPropertyCount_set = *FiftyOneDegrees::PatternV3c::DataSet_requiredPropertyCount_set;
*swig_strings_get = *FiftyOneDegrees::PatternV3c::DataSet_strings_get;
*swig_strings_set = *FiftyOneDegrees::PatternV3c::DataSet_strings_set;
*swig_components_get = *FiftyOneDegrees::PatternV3c::DataSet_components_get;
*swig_components_set = *FiftyOneDegrees::PatternV3c::DataSet_components_set;
*swig_maps_get = *FiftyOneDegrees::PatternV3c::DataSet_maps_get;
*swig_maps_set = *FiftyOneDegrees::PatternV3c::DataSet_maps_set;
*swig_properties_get = *FiftyOneDegrees::PatternV3c::DataSet_properties_get;
*swig_properties_set = *FiftyOneDegrees::PatternV3c::DataSet_properties_set;
*swig_values_get = *FiftyOneDegrees::PatternV3c::DataSet_values_get;
*swig_values_set = *FiftyOneDegrees::PatternV3c::DataSet_values_set;
*swig_profiles_get = *FiftyOneDegrees::PatternV3c::DataSet_profiles_get;
*swig_profiles_set = *FiftyOneDegrees::PatternV3c::DataSet_profiles_set;
*swig_signatures_get = *FiftyOneDegrees::PatternV3c::DataSet_signatures_get;
*swig_signatures_set = *FiftyOneDegrees::PatternV3c::DataSet_signatures_set;
*swig_rankedSignatureIndexes_get = *FiftyOneDegrees::PatternV3c::DataSet_rankedSignatureIndexes_get;
*swig_rankedSignatureIndexes_set = *FiftyOneDegrees::PatternV3c::DataSet_rankedSignatureIndexes_set;
*swig_nodes_get = *FiftyOneDegrees::PatternV3c::DataSet_nodes_get;
*swig_nodes_set = *FiftyOneDegrees::PatternV3c::DataSet_nodes_set;
*swig_rootNodes_get = *FiftyOneDegrees::PatternV3c::DataSet_rootNodes_get;
*swig_rootNodes_set = *FiftyOneDegrees::PatternV3c::DataSet_rootNodes_set;
*swig_profileOffsets_get = *FiftyOneDegrees::PatternV3c::DataSet_profileOffsets_get;
*swig_profileOffsets_set = *FiftyOneDegrees::PatternV3c::DataSet_profileOffsets_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_DataSet(@_);
=======
*swig_nodeCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesSignature_nodeCount_get;
*swig_nodeCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesSignature_nodeCount_set;
*swig_firstNodeOffsetIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesSignature_firstNodeOffsetIndex_get;
*swig_firstNodeOffsetIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesSignature_firstNodeOffsetIndex_set;
*swig_rank_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesSignature_rank_get;
*swig_rank_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesSignature_rank_set;
*swig_flags_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesSignature_flags_get;
*swig_flags_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesSignature_flags_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesSignature(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_DataSet($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesSignature($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::LinkedSignatureListItem ##############

package FiftyOneDegrees::PatternV3::LinkedSignatureListItem;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesHttpHeader ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesHttpHeader;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_next_get = *FiftyOneDegrees::PatternV3c::LinkedSignatureListItem_next_get;
*swig_next_set = *FiftyOneDegrees::PatternV3c::LinkedSignatureListItem_next_set;
*swig_previous_get = *FiftyOneDegrees::PatternV3c::LinkedSignatureListItem_previous_get;
*swig_previous_set = *FiftyOneDegrees::PatternV3c::LinkedSignatureListItem_previous_set;
*swig_rankedSignatureIndex_get = *FiftyOneDegrees::PatternV3c::LinkedSignatureListItem_rankedSignatureIndex_get;
*swig_rankedSignatureIndex_set = *FiftyOneDegrees::PatternV3c::LinkedSignatureListItem_rankedSignatureIndex_set;
*swig_frequency_get = *FiftyOneDegrees::PatternV3c::LinkedSignatureListItem_frequency_get;
*swig_frequency_set = *FiftyOneDegrees::PatternV3c::LinkedSignatureListItem_frequency_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_LinkedSignatureListItem(@_);
=======
*swig_headerNameOffset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesHttpHeader_headerNameOffset_get;
*swig_headerNameOffset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesHttpHeader_headerNameOffset_set;
*swig_headerName_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesHttpHeader_headerName_get;
*swig_headerName_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesHttpHeader_headerName_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesHttpHeader(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_LinkedSignatureListItem($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesHttpHeader($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::LinkedSignatureList ##############

package FiftyOneDegrees::PatternV3::LinkedSignatureList;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesDataSet ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesDataSet;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_items_get = *FiftyOneDegrees::PatternV3c::LinkedSignatureList_items_get;
*swig_items_set = *FiftyOneDegrees::PatternV3c::LinkedSignatureList_items_set;
*swig_first_get = *FiftyOneDegrees::PatternV3c::LinkedSignatureList_first_get;
*swig_first_set = *FiftyOneDegrees::PatternV3c::LinkedSignatureList_first_set;
*swig_last_get = *FiftyOneDegrees::PatternV3c::LinkedSignatureList_last_get;
*swig_last_set = *FiftyOneDegrees::PatternV3c::LinkedSignatureList_last_set;
*swig_count_get = *FiftyOneDegrees::PatternV3c::LinkedSignatureList_count_get;
*swig_count_set = *FiftyOneDegrees::PatternV3c::LinkedSignatureList_count_set;
*swig_current_get = *FiftyOneDegrees::PatternV3c::LinkedSignatureList_current_get;
*swig_current_set = *FiftyOneDegrees::PatternV3c::LinkedSignatureList_current_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_LinkedSignatureList(@_);
=======
*swig_header_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_header_get;
*swig_header_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_header_set;
*swig_sizeOfSignature_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_sizeOfSignature_get;
*swig_sizeOfSignature_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_sizeOfSignature_set;
*swig_signatureStartOfStruct_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_signatureStartOfStruct_get;
*swig_signatureStartOfStruct_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_signatureStartOfStruct_set;
*swig_requiredProperties_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_requiredProperties_get;
*swig_requiredProperties_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_requiredProperties_set;
*swig_requiredPropertyCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_requiredPropertyCount_get;
*swig_requiredPropertyCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_requiredPropertyCount_set;
*swig_strings_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_strings_get;
*swig_strings_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_strings_set;
*swig_componentsData_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_componentsData_get;
*swig_componentsData_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_componentsData_set;
*swig_components_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_components_get;
*swig_components_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_components_set;
*swig_maps_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_maps_get;
*swig_maps_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_maps_set;
*swig_properties_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_properties_get;
*swig_properties_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_properties_set;
*swig_values_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_values_get;
*swig_values_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_values_set;
*swig_profiles_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_profiles_get;
*swig_profiles_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_profiles_set;
*swig_signatures_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_signatures_get;
*swig_signatures_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_signatures_set;
*swig_signatureNodeOffsets_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_signatureNodeOffsets_get;
*swig_signatureNodeOffsets_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_signatureNodeOffsets_set;
*swig_nodeRankedSignatureIndexes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_nodeRankedSignatureIndexes_get;
*swig_nodeRankedSignatureIndexes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_nodeRankedSignatureIndexes_set;
*swig_rankedSignatureIndexes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_rankedSignatureIndexes_get;
*swig_rankedSignatureIndexes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_rankedSignatureIndexes_set;
*swig_nodes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_nodes_get;
*swig_nodes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_nodes_set;
*swig_rootNodes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_rootNodes_get;
*swig_rootNodes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_rootNodes_set;
*swig_profileOffsets_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_profileOffsets_get;
*swig_profileOffsets_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_profileOffsets_set;
*swig_httpHeadersCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_httpHeadersCount_get;
*swig_httpHeadersCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_httpHeadersCount_set;
*swig_httpHeaders_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_httpHeaders_get;
*swig_httpHeaders_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesDataSet_httpHeaders_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesDataSet(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_LinkedSignatureList($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesDataSet($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


<<<<<<< HEAD
############# Class : FiftyOneDegrees::PatternV3::Workset ##############

package FiftyOneDegrees::PatternV3::Workset;
=======
############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesLinkedSignatureListItem ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesLinkedSignatureListItem;
>>>>>>> V32
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
<<<<<<< HEAD
*swig_dataSet_get = *FiftyOneDegrees::PatternV3c::Workset_dataSet_get;
*swig_dataSet_set = *FiftyOneDegrees::PatternV3c::Workset_dataSet_set;
*swig_input_get = *FiftyOneDegrees::PatternV3c::Workset_input_get;
*swig_input_set = *FiftyOneDegrees::PatternV3c::Workset_input_set;
*swig_targetUserAgent_get = *FiftyOneDegrees::PatternV3c::Workset_targetUserAgent_get;
*swig_targetUserAgent_set = *FiftyOneDegrees::PatternV3c::Workset_targetUserAgent_set;
*swig_targetUserAgentArray_get = *FiftyOneDegrees::PatternV3c::Workset_targetUserAgentArray_get;
*swig_targetUserAgentArray_set = *FiftyOneDegrees::PatternV3c::Workset_targetUserAgentArray_set;
*swig_targetUserAgentArrayLength_get = *FiftyOneDegrees::PatternV3c::Workset_targetUserAgentArrayLength_get;
*swig_targetUserAgentArrayLength_set = *FiftyOneDegrees::PatternV3c::Workset_targetUserAgentArrayLength_set;
*swig_relevantNodes_get = *FiftyOneDegrees::PatternV3c::Workset_relevantNodes_get;
*swig_relevantNodes_set = *FiftyOneDegrees::PatternV3c::Workset_relevantNodes_set;
*swig_closestNodes_get = *FiftyOneDegrees::PatternV3c::Workset_closestNodes_get;
*swig_closestNodes_set = *FiftyOneDegrees::PatternV3c::Workset_closestNodes_set;
*swig_profiles_get = *FiftyOneDegrees::PatternV3c::Workset_profiles_get;
*swig_profiles_set = *FiftyOneDegrees::PatternV3c::Workset_profiles_set;
*swig_profileCount_get = *FiftyOneDegrees::PatternV3c::Workset_profileCount_get;
*swig_profileCount_set = *FiftyOneDegrees::PatternV3c::Workset_profileCount_set;
*swig_nodes_get = *FiftyOneDegrees::PatternV3c::Workset_nodes_get;
*swig_nodes_set = *FiftyOneDegrees::PatternV3c::Workset_nodes_set;
*swig_orderedNodes_get = *FiftyOneDegrees::PatternV3c::Workset_orderedNodes_get;
*swig_orderedNodes_set = *FiftyOneDegrees::PatternV3c::Workset_orderedNodes_set;
*swig_nodeCount_get = *FiftyOneDegrees::PatternV3c::Workset_nodeCount_get;
*swig_nodeCount_set = *FiftyOneDegrees::PatternV3c::Workset_nodeCount_set;
*swig_closestNodeRankedSignatureIndex_get = *FiftyOneDegrees::PatternV3c::Workset_closestNodeRankedSignatureIndex_get;
*swig_closestNodeRankedSignatureIndex_set = *FiftyOneDegrees::PatternV3c::Workset_closestNodeRankedSignatureIndex_set;
*swig_linkedSignatureList_get = *FiftyOneDegrees::PatternV3c::Workset_linkedSignatureList_get;
*swig_linkedSignatureList_set = *FiftyOneDegrees::PatternV3c::Workset_linkedSignatureList_set;
*swig_signature_get = *FiftyOneDegrees::PatternV3c::Workset_signature_get;
*swig_signature_set = *FiftyOneDegrees::PatternV3c::Workset_signature_set;
*swig_signatureAsString_get = *FiftyOneDegrees::PatternV3c::Workset_signatureAsString_get;
*swig_signatureAsString_set = *FiftyOneDegrees::PatternV3c::Workset_signatureAsString_set;
*swig_nextCharacterPositionIndex_get = *FiftyOneDegrees::PatternV3c::Workset_nextCharacterPositionIndex_get;
*swig_nextCharacterPositionIndex_set = *FiftyOneDegrees::PatternV3c::Workset_nextCharacterPositionIndex_set;
*swig_method_get = *FiftyOneDegrees::PatternV3c::Workset_method_get;
*swig_method_set = *FiftyOneDegrees::PatternV3c::Workset_method_set;
*swig_difference_get = *FiftyOneDegrees::PatternV3c::Workset_difference_get;
*swig_difference_set = *FiftyOneDegrees::PatternV3c::Workset_difference_set;
*swig_rootNodesEvaluated_get = *FiftyOneDegrees::PatternV3c::Workset_rootNodesEvaluated_get;
*swig_rootNodesEvaluated_set = *FiftyOneDegrees::PatternV3c::Workset_rootNodesEvaluated_set;
*swig_stringsRead_get = *FiftyOneDegrees::PatternV3c::Workset_stringsRead_get;
*swig_stringsRead_set = *FiftyOneDegrees::PatternV3c::Workset_stringsRead_set;
*swig_nodesEvaluated_get = *FiftyOneDegrees::PatternV3c::Workset_nodesEvaluated_get;
*swig_nodesEvaluated_set = *FiftyOneDegrees::PatternV3c::Workset_nodesEvaluated_set;
*swig_signaturesCompared_get = *FiftyOneDegrees::PatternV3c::Workset_signaturesCompared_get;
*swig_signaturesCompared_set = *FiftyOneDegrees::PatternV3c::Workset_signaturesCompared_set;
*swig_signaturesRead_get = *FiftyOneDegrees::PatternV3c::Workset_signaturesRead_get;
*swig_signaturesRead_set = *FiftyOneDegrees::PatternV3c::Workset_signaturesRead_set;
*swig_closestSignatures_get = *FiftyOneDegrees::PatternV3c::Workset_closestSignatures_get;
*swig_closestSignatures_set = *FiftyOneDegrees::PatternV3c::Workset_closestSignatures_set;
*swig_values_get = *FiftyOneDegrees::PatternV3c::Workset_values_get;
*swig_values_set = *FiftyOneDegrees::PatternV3c::Workset_values_set;
*swig_valuesCount_get = *FiftyOneDegrees::PatternV3c::Workset_valuesCount_get;
*swig_valuesCount_set = *FiftyOneDegrees::PatternV3c::Workset_valuesCount_set;
*swig_startWithInitialScore_get = *FiftyOneDegrees::PatternV3c::Workset_startWithInitialScore_get;
*swig_startWithInitialScore_set = *FiftyOneDegrees::PatternV3c::Workset_startWithInitialScore_set;
*swig_functionPtrGetScore_get = *FiftyOneDegrees::PatternV3c::Workset_functionPtrGetScore_get;
*swig_functionPtrGetScore_set = *FiftyOneDegrees::PatternV3c::Workset_functionPtrGetScore_set;
*swig_functionPtrNextClosestSignature_get = *FiftyOneDegrees::PatternV3c::Workset_functionPtrNextClosestSignature_get;
*swig_functionPtrNextClosestSignature_set = *FiftyOneDegrees::PatternV3c::Workset_functionPtrNextClosestSignature_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_Workset(@_);
=======
*swig_next_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureListItem_next_get;
*swig_next_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureListItem_next_set;
*swig_previous_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureListItem_previous_get;
*swig_previous_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureListItem_previous_set;
*swig_rankedSignatureIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureListItem_rankedSignatureIndex_get;
*swig_rankedSignatureIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureListItem_rankedSignatureIndex_set;
*swig_frequency_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureListItem_frequency_get;
*swig_frequency_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureListItem_frequency_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesLinkedSignatureListItem(@_);
>>>>>>> V32
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
<<<<<<< HEAD
        FiftyOneDegrees::PatternV3c::delete_Workset($self);
=======
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesLinkedSignatureListItem($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesLinkedSignatureList ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesLinkedSignatureList;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
*swig_items_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureList_items_get;
*swig_items_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureList_items_set;
*swig_first_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureList_first_get;
*swig_first_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureList_first_set;
*swig_last_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureList_last_get;
*swig_last_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureList_last_set;
*swig_count_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureList_count_get;
*swig_count_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureList_count_set;
*swig_current_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureList_current_get;
*swig_current_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesLinkedSignatureList_current_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesLinkedSignatureList(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesLinkedSignatureList($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesResultset ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesResultset;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
*swig_dataSet_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_dataSet_get;
*swig_dataSet_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_dataSet_set;
*swig_targetUserAgentArray_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_targetUserAgentArray_get;
*swig_targetUserAgentArray_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_targetUserAgentArray_set;
*swig_targetUserAgentArrayLength_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_targetUserAgentArrayLength_get;
*swig_targetUserAgentArrayLength_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_targetUserAgentArrayLength_set;
*swig_targetUserAgentHashCode_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_targetUserAgentHashCode_get;
*swig_targetUserAgentHashCode_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_targetUserAgentHashCode_set;
*swig_hashCodeSet_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_hashCodeSet_get;
*swig_hashCodeSet_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_hashCodeSet_set;
*swig_method_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_method_get;
*swig_method_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_method_set;
*swig_difference_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_difference_get;
*swig_difference_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_difference_set;
*swig_rootNodesEvaluated_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_rootNodesEvaluated_get;
*swig_rootNodesEvaluated_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_rootNodesEvaluated_set;
*swig_stringsRead_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_stringsRead_get;
*swig_stringsRead_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_stringsRead_set;
*swig_nodesEvaluated_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_nodesEvaluated_get;
*swig_nodesEvaluated_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_nodesEvaluated_set;
*swig_signaturesCompared_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_signaturesCompared_get;
*swig_signaturesCompared_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_signaturesCompared_set;
*swig_signaturesRead_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_signaturesRead_get;
*swig_signaturesRead_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_signaturesRead_set;
*swig_closestSignatures_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_closestSignatures_get;
*swig_closestSignatures_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_closestSignatures_set;
*swig_profiles_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_profiles_get;
*swig_profiles_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_profiles_set;
*swig_profileCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_profileCount_get;
*swig_profileCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_profileCount_set;
*swig_signature_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_signature_get;
*swig_signature_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_signature_set;
*swig_previous_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_previous_get;
*swig_previous_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_previous_set;
*swig_next_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_next_get;
*swig_next_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_next_set;
*swig_state_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_state_get;
*swig_state_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultset_state_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesResultset(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesResultset($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesResultsetCacheList ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesResultsetCacheList;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
*swig_cache_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheList_cache_get;
*swig_cache_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheList_cache_set;
*swig_resultSets_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheList_resultSets_get;
*swig_resultSets_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheList_resultSets_set;
*swig_allocated_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheList_allocated_get;
*swig_allocated_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheList_allocated_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesResultsetCacheList(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesResultsetCacheList($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesResultsetCacheLinkedList ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesResultsetCacheLinkedList;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
*swig_first_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheLinkedList_first_get;
*swig_first_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheLinkedList_first_set;
*swig_last_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheLinkedList_last_get;
*swig_last_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheLinkedList_last_set;
*swig_count_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheLinkedList_count_get;
*swig_count_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesResultsetCacheLinkedList_count_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesResultsetCacheLinkedList(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesResultsetCacheLinkedList($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegrees_resultset_cache_t ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegrees_resultset_cache_t;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
*swig_dataSet_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_dataSet_get;
*swig_dataSet_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_dataSet_set;
*swig_resultSets_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_resultSets_get;
*swig_resultSets_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_resultSets_set;
*swig_sizeOfResultset_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_sizeOfResultset_get;
*swig_sizeOfResultset_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_sizeOfResultset_set;
*swig_total_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_total_get;
*swig_total_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_total_set;
*swig_free_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_free_get;
*swig_free_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_free_set;
*swig_allocated_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_allocated_get;
*swig_allocated_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_allocated_set;
*swig_active_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_active_get;
*swig_active_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_active_set;
*swig_background_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_background_get;
*swig_background_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_background_set;
*swig_switchLimit_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_switchLimit_get;
*swig_switchLimit_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_switchLimit_set;
*swig_hits_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_hits_get;
*swig_hits_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_hits_set;
*swig_misses_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_misses_get;
*swig_misses_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_misses_set;
*swig_switches_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_switches_get;
*swig_switches_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_switches_set;
*swig_activeLock_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_activeLock_get;
*swig_activeLock_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_activeLock_set;
*swig_backgroundLock_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_backgroundLock_get;
*swig_backgroundLock_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegrees_resultset_cache_t_backgroundLock_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegrees_resultset_cache_t(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegrees_resultset_cache_t($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesHttpHeaderWorkset ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesHttpHeaderWorkset;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
*swig_header_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesHttpHeaderWorkset_header_get;
*swig_header_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesHttpHeaderWorkset_header_set;
*swig_headerValue_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesHttpHeaderWorkset_headerValue_get;
*swig_headerValue_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesHttpHeaderWorkset_headerValue_set;
*swig_headerValueLength_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesHttpHeaderWorkset_headerValueLength_get;
*swig_headerValueLength_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesHttpHeaderWorkset_headerValueLength_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesHttpHeaderWorkset(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesHttpHeaderWorkset($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesWorkset ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesWorkset;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
*swig_dataSet_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_dataSet_get;
*swig_dataSet_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_dataSet_set;
*swig_targetUserAgentArray_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_targetUserAgentArray_get;
*swig_targetUserAgentArray_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_targetUserAgentArray_set;
*swig_targetUserAgentArrayLength_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_targetUserAgentArrayLength_get;
*swig_targetUserAgentArrayLength_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_targetUserAgentArrayLength_set;
*swig_targetUserAgentHashCode_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_targetUserAgentHashCode_get;
*swig_targetUserAgentHashCode_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_targetUserAgentHashCode_set;
*swig_hashCodeSet_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_hashCodeSet_get;
*swig_hashCodeSet_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_hashCodeSet_set;
*swig_method_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_method_get;
*swig_method_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_method_set;
*swig_difference_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_difference_get;
*swig_difference_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_difference_set;
*swig_rootNodesEvaluated_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_rootNodesEvaluated_get;
*swig_rootNodesEvaluated_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_rootNodesEvaluated_set;
*swig_stringsRead_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_stringsRead_get;
*swig_stringsRead_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_stringsRead_set;
*swig_nodesEvaluated_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_nodesEvaluated_get;
*swig_nodesEvaluated_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_nodesEvaluated_set;
*swig_signaturesCompared_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_signaturesCompared_get;
*swig_signaturesCompared_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_signaturesCompared_set;
*swig_signaturesRead_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_signaturesRead_get;
*swig_signaturesRead_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_signaturesRead_set;
*swig_closestSignatures_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_closestSignatures_get;
*swig_closestSignatures_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_closestSignatures_set;
*swig_profiles_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_profiles_get;
*swig_profiles_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_profiles_set;
*swig_profileCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_profileCount_get;
*swig_profileCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_profileCount_set;
*swig_signature_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_signature_get;
*swig_signature_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_signature_set;
*swig_values_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_values_get;
*swig_values_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_values_set;
*swig_valuesCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_valuesCount_get;
*swig_valuesCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_valuesCount_set;
*swig_input_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_input_get;
*swig_input_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_input_set;
*swig_targetUserAgent_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_targetUserAgent_get;
*swig_targetUserAgent_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_targetUserAgent_set;
*swig_relevantNodes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_relevantNodes_get;
*swig_relevantNodes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_relevantNodes_set;
*swig_closestNodes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_closestNodes_get;
*swig_closestNodes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_closestNodes_set;
*swig_signatureAsString_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_signatureAsString_get;
*swig_signatureAsString_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_signatureAsString_set;
*swig_tempheaderlowercase_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_tempheaderlowercase_get;
*swig_tempheaderlowercase_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_tempheaderlowercase_set;
*swig_nodes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_nodes_get;
*swig_nodes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_nodes_set;
*swig_orderedNodes_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_orderedNodes_get;
*swig_orderedNodes_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_orderedNodes_set;
*swig_nodeCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_nodeCount_get;
*swig_nodeCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_nodeCount_set;
*swig_closestNodeRankedSignatureIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_closestNodeRankedSignatureIndex_get;
*swig_closestNodeRankedSignatureIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_closestNodeRankedSignatureIndex_set;
*swig_linkedSignatureList_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_linkedSignatureList_get;
*swig_linkedSignatureList_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_linkedSignatureList_set;
*swig_nextCharacterPositionIndex_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_nextCharacterPositionIndex_get;
*swig_nextCharacterPositionIndex_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_nextCharacterPositionIndex_set;
*swig_startWithInitialScore_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_startWithInitialScore_get;
*swig_startWithInitialScore_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_startWithInitialScore_set;
*swig_functionPtrGetScore_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_functionPtrGetScore_get;
*swig_functionPtrGetScore_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_functionPtrGetScore_set;
*swig_functionPtrNextClosestSignature_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_functionPtrNextClosestSignature_get;
*swig_functionPtrNextClosestSignature_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_functionPtrNextClosestSignature_set;
*swig_cache_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_cache_get;
*swig_cache_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_cache_set;
*swig_tempProfiles_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_tempProfiles_get;
*swig_tempProfiles_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_tempProfiles_set;
*swig_importantHeadersCount_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_importantHeadersCount_get;
*swig_importantHeadersCount_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_importantHeadersCount_set;
*swig_importantHeaders_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_importantHeaders_get;
*swig_importantHeaders_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorkset_importantHeaders_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesWorkset(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesWorkset($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : FiftyOneDegrees::PatternV3::fiftyoneDegreesWorksetPool ##############

package FiftyOneDegrees::PatternV3::fiftyoneDegreesWorksetPool;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( FiftyOneDegrees::PatternV3 );
%OWNER = ();
%ITERATORS = ();
*swig_dataSet_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_dataSet_get;
*swig_dataSet_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_dataSet_set;
*swig_cache_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_cache_get;
*swig_cache_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_cache_set;
*swig_size_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_size_get;
*swig_size_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_size_set;
*swig_worksets_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_worksets_get;
*swig_worksets_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_worksets_set;
*swig_available_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_available_get;
*swig_available_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_available_set;
*swig_created_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_created_get;
*swig_created_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_created_set;
*swig_lock_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_lock_get;
*swig_lock_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_lock_set;
*swig_signal_get = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_signal_get;
*swig_signal_set = *FiftyOneDegrees::PatternV3c::fiftyoneDegreesWorksetPool_signal_set;
sub new {
    my $pkg = shift;
    my $self = FiftyOneDegrees::PatternV3c::new_fiftyoneDegreesWorksetPool(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        FiftyOneDegrees::PatternV3c::delete_fiftyoneDegreesWorksetPool($self);
>>>>>>> V32
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


# ------- VARIABLE STUBS --------

package FiftyOneDegrees::PatternV3;

*NONE = *FiftyOneDegrees::PatternV3c::NONE;
*EXACT = *FiftyOneDegrees::PatternV3c::EXACT;
*NUMERIC = *FiftyOneDegrees::PatternV3c::NUMERIC;
*NEAREST = *FiftyOneDegrees::PatternV3c::NEAREST;
*CLOSEST = *FiftyOneDegrees::PatternV3c::CLOSEST;
<<<<<<< HEAD
=======
*ACTIVE_CACHE_LIST_ONLY = *FiftyOneDegrees::PatternV3c::ACTIVE_CACHE_LIST_ONLY;
*BOTH_CACHE_LISTS = *FiftyOneDegrees::PatternV3c::BOTH_CACHE_LISTS;
>>>>>>> V32
*DATA_SET_INIT_STATUS_SUCCESS = *FiftyOneDegrees::PatternV3c::DATA_SET_INIT_STATUS_SUCCESS;
*DATA_SET_INIT_STATUS_INSUFFICIENT_MEMORY = *FiftyOneDegrees::PatternV3c::DATA_SET_INIT_STATUS_INSUFFICIENT_MEMORY;
*DATA_SET_INIT_STATUS_CORRUPT_DATA = *FiftyOneDegrees::PatternV3c::DATA_SET_INIT_STATUS_CORRUPT_DATA;
*DATA_SET_INIT_STATUS_INCORRECT_VERSION = *FiftyOneDegrees::PatternV3c::DATA_SET_INIT_STATUS_INCORRECT_VERSION;
*DATA_SET_INIT_STATUS_FILE_NOT_FOUND = *FiftyOneDegrees::PatternV3c::DATA_SET_INIT_STATUS_FILE_NOT_FOUND;
<<<<<<< HEAD
=======
*DATA_SET_INIT_STATUS_NOT_SET = *FiftyOneDegrees::PatternV3c::DATA_SET_INIT_STATUS_NOT_SET;
>>>>>>> V32
1;
