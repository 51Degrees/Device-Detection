#
# Copyright 51Degrees Mobile Experts Limited (c) 2016.
#
# This Source Code Form is copyright of 51Degrees Mobile Experts Limited.
# Copyright 2015 51Degrees Mobile Experts Limited, 5 Charlotte Close,
# Caversham, Reading, Berkshire, United Kingdom RG4 7BY
#
# This Source Code Form is the subject of the following patent
# applications, owned by 51Degrees Mobile Experts Limited of 5 Charlotte
# Close, Caversham, Reading, Berkshire, United Kingdom RG4 7BY:
# European Patent Application No. 13192291.6; and
# United States Patent Application Nos. 14/085,223 and 14/085,301.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.
#
# If a copy of the MPL was not distributed with this file, You can obtain
# one at http://mozilla.org/MPL/2.0/.
#
# This Source Code Form is "Incompatible With Secondary Licenses", as
# defined by the Mozilla Public License, v. 2.0.
#

$Module fiftyonedegrees 3 51Degrees Device Detection VMOD

DESCRIPTION
===========

Prototype 51Degrees device detection module for Varnish 4.0

Implements the 51Degrees match functionality as a VMOD.
Initialise the data set with
fiftyonedegrees.start(datafilepath),
then get a match property from a requesting device with
fiftyonedegrees.match(propertyname).

$Function VOID start(STRING fileName)

Return value
	VOID
Description
	Initialises the 51Degrees provider with the data file path provided.
Example
        ::

                fiftyonedegrees.start("/path/to/51Degrees.dat");

$Function STRING match_all(STRING properties)

Return value
	STRING The value of the requested property or properties for the
	matched device. Multiple values for the same property are separated
	with "|", and values for different properties are separated by the
	delimiter set with set_delimiter or "," by default.
Description
	Returns the value(s) of property provided for the requesting device
	using all important HTTP headers. Multiple properties should be
	separated with a comma.
Example
        ::

                set req.http.X-IsMobile = fiftyonedegrees.match_all("IsMobile");

$Function STRING match_single(STRING userAgent, STRING properties)

Return value
	STRING The value of the requested property or properties for the
	matched device. Multiple values for the same property are separated
	with "|", and values for different properties are separated by the
	delimiter set with set_delimiter or "," by default.
Description
	Returns the value of property provided for the requesting device
	using the User-Agent provided. Multiple properties should be
	separated with a comma.
Example
        ::

                set req.http.X-IsMobile = fiftyonedegrees.match_singe(req.http.user-agent, "IsMobile");

$Function VOID set_cache(INT cacheSize)

Description
	Sets the size of the cache created by the provider.
Example
	::

               fiftyonedegrees.set_cache(1000);

$Function VOID set_pool(INT poolSize)

Description
	Sets the size of the workset pool created by the provider.
Example
	::

              fiftyonedegrees.set_pool(20);

$Function VOID set_properties(STRING properties)

Description
	Limits the properties which are initialised to the ones set
	in this function. The function takes a comma sepparated list
	of properties.
Example
        ::

               fiftyonedegrees.set_properties("IsMobile,BrowserName");

$Function VOID set_delimiter(STRING delimiter)

Description
	Sets the delimiter to use when returning values for multiple properties.
	If not set, then a comma is used by default.
Example
	::

              fiftyonedegrees.set_delimiter("/");

$Function STRING get_version()

Return value
	STRING The version number in the format "x.x.x.x".
Description
	Returns the version number of the data set being used.

Example
	::

             set req.http.X-51D-Version = fiftyonedegrees.get_version();

$Init init_function
